IP: 34.87.8.171		u/P: root/oms@123

- change pass: sudo passwd root

- Config ssh: vi /etc/ssh/sshd_config
	PermitRootLogin no thành PermitRootLogin yes
	PasswordAuthentication no thành PasswordAuthentication yes




Chính sách SELinux cho VSFTPD:

Để share file một cách ẩn danh ta set biến public_content_t với đường dẫn public:
~]# chcon -R -t public_content_t /path/to/directory
Để tạo một đường dẫn để upload file một cách ẩn danh, ta cấu hình tương tự như trên và set tham số allow_ftpd_anon_write bằng lệnh sau:
 ~]# setsebool -P allow_ftpd_anon_write=1
Cho phép người dùng local truy cập đường dẫn nguồn của chính họ bằng lệnh sau:
~]# setsebool -P ftp_home_dir=1
	

- install java 11
	cd /opt/
	rpm -Uvh jdk-11.0.4_linux-x64_bin.rpm 
	alternatives --config java
	java -version
	export JAVA_HOME=/usr/java/jdk-11.0.4
	export PATH=$PATH:/usr/java/jdk-11.0.4/bin/

	export PATH="/usr/local/opt/inetutils/libexec/gnubin:$PATH"
	reboot

- install vsfptd: 
	yum install vsftpd
	systemctl [start] [stop] [status] vsftpd.service
	systemctl enable vsftpd.service
	systemctl restart vsftpd.service
	vi /etc/vsftpd/vsftpd.conf
		listen= YES
		anonymous_enable=YES
		local_enable=YES
		write_enable=YES
		anon_upload_enable=YES
		anon_mkdir_write_enable=YES
		#Chỉ chroot đối với một số user nằm trong danh sách được tạo trên đường dẫn /etc/vsftpd.chroot_list:
		chroot_local_user=NO
		chroot_list_enable=YES

	Create user ftp: As discussed in the previous section the user will be able to upload its files to the ftp/upload directory.
		sudo adduser ftpuser
		sudo passwd ftpuser	(ftp@123)
		echo "ftpuser" | sudo tee -a /etc/vsftpd/user_list
		sudo mkdir -p /home/ftpuser/ftp/upload
		sudo chmod 550 /home/ftpuser/ftp
		sudo chmod 750 /home/ftpuser/ftp/upload
		sudo chown -R ftpuser: /home/ftpuser/ftp

		Disabling Shell Access
			Run the following commands to create the /bin/ftponly shell and make it executable:
				echo -e '#!/bin/sh\necho "This account is limited to FTP access only."' | sudo tee -a  /bin/ftponly
				sudo chmod a+x /bin/ftponly
			Append the new shell to the list of valid shells in the /etc/shells file:
				echo "/bin/ftponly" | sudo tee -a /etc/shells
			Change the user shell to /bin/ftponly:
				sudo usermod ftpuser -s /bin/ftponly

		De ls được trong ftp client thì cần allow port 20 va sudo setsebool -P allow_ftpd_full_access 1


- install influxdb
	run command
		cat <<EOF | sudo tee /etc/yum.repos.d/influxdb.repo
		[influxdb]
		name = InfluxDB Repository - RHEL \$releasever
		baseurl = https://repos.influxdata.com/rhel/\$releasever/\$basearch/stable
		enabled = 1
		gpgcheck = 1
		gpgkey = https://repos.influxdata.com/influxdb.key
		EOF

	sudo yum makecache fast
	sudo yum -y install influxdb vim curl
	sudo systemctl start influxdb && sudo systemctl enable influxdb
	sudo vim /etc/influxdb/influxdb.conf
		[http]
		auth-enabled = true
	curl -XPOST "http://localhost:8086/query" --data-urlencode "q=CREATE USER oms WITH PASSWORD 'oms@123' WITH ALL PRIVILEGES"
	influx -username 'oms' -password 'oms@123'

- Installing Grafana on CentOS 7
	run command
		cat <<EOF | sudo tee /etc/yum.repos.d/grafana.repo
		[grafana]
		name=grafana
		baseurl=https://packages.grafana.com/oss/rpm
		repo_gpgcheck=1
		enabled=1
		gpgcheck=1
		gpgkey=https://packages.grafana.com/gpg.key
		sslverify=1
		sslcacert=/etc/pki/tls/certs/ca-bundle.crt
		EOF

	sudo yum -y install grafana
	sudo systemctl start grafana-server
	sudo systemctl enable grafana-server

	http://34.87.8.171:3000/?orgId=1			u/p: admin/oms@123






- Config application as service

	I think you could try if your system supports systemd:

	Create a service file with a name you consider is appropriate for you in the /etc/systemd/system/ directory:

	sudo vi /etc/systemd/system/spring-boot.service

	[Unit]
	Description=Spring Boot Service
	StartLimitIntervalSec=0
	After=syslog.target

	[Service]
	Type=simple
	Restart=always
	RestartSec=4
	User=root
	ExecStart=/bin/bash -c "/usr/bin/java -jar spring.boot.jar --parameter01='My Parameter Value 01' --parameter02='My Parameter Value 02'"

	[Install]
	WantedBy=multi-user.target
	Next you have to reload systemd:

	sudo systemctl daemon-reload
	Next you can start it:

	sudo systemctl start spring-boot
	Get status:

	systemctl status spring-boot
	Stop it:

	sudo systemctl stop spring-boot
	Or add it to autostart with system booting:

	sudo systemctl enable spring-boot
	To troubleshot you could run the next in parallel terminal window to see the realtime changes:

	sudo tail -f /var/log/syslog


